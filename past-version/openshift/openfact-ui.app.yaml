apiVersion: v1
kind: Template
metadata:
  name: ofui
  creationTimestamp: null
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      service: ofui
    name: ofui
  spec:
    replicas: 3
    selector:
      service: ofui
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: ofui
      spec:
        containers:
        - image: registry.devshift.net/fabric8-ui/fabric8-ui:${IMAGE_TAG}
          imagePullPolicy: Always
          name: ofui
          ports:
          - containerPort: 80
            protocol: TCP
          env:
            - name: ANALYTICS_WRITE_KEY
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: analytics.write.key
            - name: WS_K8S_API_SERVER
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: ws.k8s.api.server
            - name: K8S_API_SERVER_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: k8s.api.server.protocol
            - name: K8S_API_SERVER_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: k8s.api.server.base.path
            - name: OAUTH_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: oauth.issuer
            - name: OAUTH_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: oauth.client.id
            - name: OAUTH_SCOPE
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: oauth.scope
            - name: OAUTH_AUTHORIZE_URI
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: oauth.authorize.uri
            - name: AUTH_LOGOUT_URI
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: oauth.logout.uri
            - name: FABRIC8_PIPELINES_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: fabric8.pipelines.namespace
            - name: PROXY_PASS_URL
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: proxy.pass.url
            - name: OPENSHIFT_CONSOLE_URL
              valueFrom:
                configMapKeyRef:
                  name: ofui
                  key: openshift.console.url
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 10
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      service: ofui
    name: ofui
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: ofui
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      service: ofui
    name: ofui-pp
  spec:
    host: ''
    port:
      targetPort: "8080"
    to:
      kind: Service
      name: ofui
      weight: 100
    wildcardPolicy: None
  status: {}
parameters:
- name: IMAGE_TAG
  value: latest
